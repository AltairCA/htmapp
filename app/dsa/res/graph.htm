<body>
    <div id="chart"></div>
	<script type="text/javascript">
		var w = 640,
			h = 480,
			r = Math.min(w, h) / 2,
			color = d3.scale.category20c();

		var vis = d3.select("#chart").append("svg")
			.attr("width", w)
			.attr("height", h)
			.append("g")
			.attr("transform", "translate(" + w / 2 + "," + h / 2 + ")");

		var partition = d3.layout.partition()
			.sort(null)
			.size([2 * Math.PI, r * r])
			.value(function(d) { return 1; });

		var arc = d3.svg.arc()
			.startAngle(function(d) { return d.x; })
			.endAngle(function(d) { return d.x + d.dx; })
			.innerRadius(function(d) { return Math.sqrt(d.y); })
			.outerRadius(function(d) { return Math.sqrt(d.y + d.dy); });

		function notzero( a )
		{
			for ( var i in a )
				return true;
			return false;
		}
			
		var g_init = 0;
		function poll_data()
		{
			$.ajax({ url: "data.htm", 
					 dataType: "json",
					 success: function(data) 
					 {	
						if ( notzero( data ) )
							if ( !g_init )
								data_response(data);
							else
								vis.data([data])
								   .selectAll("path")
								   .attr("d", arc);

						setTimeout( poll_data, 1000 );
					 },
					 error: function(xhr,opt,msg) { setTimeout( poll_data, 3000 ); },
				});
		}
			
		setTimeout( poll_data, 1000 );
		// d3.json("data.htm", function(json){ /*if ( data.length ) data_response(json);*/ poll_data(); } );

		function data_response(json){

		  g_init = 1;

		  var path = vis.data([json]).selectAll("path")
			  .data(partition.nodes)
			  .enter().append("path")
			  .attr("display", function(d) { return d.depth ? null : "none"; }) // hide inner ring
			  .attr("d", arc)
			  .attr("fill-rule", "evenodd")
			  .style("stroke", "#222")
			  .style("fill", function(d) { return color((d.children ? d : d.parent).name); })
			  .each(stash);
		  
		/*      
		   var text = vis.data([json]).selectAll("text") 
			  .data(partition.nodes) 
			  .enter().append("svg:text") 
			  .attr("transform", function(d) { return "rotate(" + (d.x + d.dx / 2 - Math.PI / 2) / Math.PI * 180 + ")"; })
			  .attr("x", r * Math.cos(d.x + d.dx/2) ) 
			  .attr("y", r * Math.sin(d.x + d.dx/2)) 
			  .attr("text-anchor", "end") 
			  .text(d.name)
			  .on("mouseover",function(d,i) { d3.select(this).transition().duration(300).attr("fill","#00ffff"); }) 
			  .on("mouseout",function(d,i) { d3.select(this).transition().duration(300).attr("fill","#008000"); }); 
		*/       

		  d3.select("#size").on("click", function() {
				path
				.data(partition.value(function(d) { return d.size; }))
				.transition()
				.duration(1500)
				.attrTween("d", arcTween);

			d3.select("#size").classed("active", true);
			d3.select("#count").classed("active", false);
			
		  });

		  d3.select("#count").on("click", function() {
				path
				.data(partition.value(function(d) { return 1; }))
				.transition()
				.duration(1500)
				.attrTween("d", arcTween);

			d3.select("#size").classed("active", false);
			d3.select("#count").classed("active", true);
		  });
		  
		}

		// Stash the old values for transition.
		function stash(d) {
		  d.x0 = d.x;
		  d.dx0 = d.dx;
		}

		// Interpolate the arcs in data space.
		function arcTween(a) {
		  var i = d3.interpolate({x: a.x0, dx: a.dx0}, a);
		  return function(t) {
			var b = i(t);
			a.x0 = b.x;
			a.dx0 = b.dx;
			return arc(b);
		  };
		}
	</script>
</body>

